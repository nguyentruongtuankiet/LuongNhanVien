/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import connect.ConnectDB1;
import dao.ThongkeCNDAO;
import entity.LuongCongNhan;
import java.awt.CardLayout;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Tuan Kiet Admin
 */
public class ThongKeCN extends javax.swing.JPanel {

    private ThongkeCNDAO thongkecndao;
    private DefaultTableModel modelThongkeCN;

    /**
     * Creates new form ThongKeCN
     */
    public ThongKeCN() {
        initComponents();
        try {
            ConnectDB1.getInstance().connect();
        } catch (Exception e) {
            e.printStackTrace();
        }
        thongkecndao = new ThongkeCNDAO();
        modelThongkeCN = (DefaultTableModel) jTableTK.getModel();

        loadComBoBoxThang();
        loadComboBoxNam();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbothang = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbonam = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTK = new javax.swing.JTable();
        jpane1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbtongluong = new javax.swing.JLabel();
        lbluongcaonhat = new javax.swing.JLabel();
        lbluongthapnhat = new javax.swing.JLabel();
        lbluongTB = new javax.swing.JLabel();
        lbTongCN = new javax.swing.JLabel();
        lbTongSP = new javax.swing.JLabel();
        btnThongKe = new custom_button.MyButton();

        setLayout(null);

        cbothang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbothang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbothangActionPerformed(evt);
            }
        });
        add(cbothang);
        cbothang.setBounds(100, 80, 89, 33);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Tháng:");
        add(jLabel2);
        jLabel2.setBounds(30, 87, 54, 22);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Năm:");
        add(jLabel3);
        jLabel3.setBounds(210, 87, 40, 22);

        cbonam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cbonam);
        cbonam.setBounds(262, 82, 89, 33);

        jTableTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã CN", "Tên CN", "Số SP Làm Được", "Số ca đã Làm", "Thàng", "Năm", "Lương"
            }
        ));
        jScrollPane1.setViewportView(jTableTK);

        add(jScrollPane1);
        jScrollPane1.setBounds(410, 70, 866, 175);

        jpane1.setBackground(new java.awt.Color(255, 255, 255));
        jpane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 204)));

        javax.swing.GroupLayout jpane1Layout = new javax.swing.GroupLayout(jpane1);
        jpane1.setLayout(jpane1Layout);
        jpane1Layout.setHorizontalGroup(
            jpane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
        );
        jpane1Layout.setVerticalGroup(
            jpane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        add(jpane1);
        jpane1.setBounds(410, 260, 850, 359);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel4.setText("Tổng tiền lương tháng này:");
        add(jLabel4);
        jLabel4.setBounds(39, 278, 197, 21);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel5.setText("Tổng số công nhân:");
        add(jLabel5);
        jLabel5.setBounds(39, 398, 141, 21);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel6.setText("Lương trung bình mỗi người:");
        add(jLabel6);
        jLabel6.setBounds(39, 368, 216, 21);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel7.setText("Tổng SP làm được trong tháng:");
        add(jLabel7);
        jLabel7.setBounds(39, 428, 230, 21);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel8.setText("Lương cao nhất:");
        add(jLabel8);
        jLabel8.setBounds(39, 308, 150, 21);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel9.setText("Lương Thấp nhất:");
        add(jLabel9);
        jLabel9.setBounds(39, 338, 140, 21);

        lbtongluong.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lbtongluong.setText("?");
        add(lbtongluong);
        lbtongluong.setBounds(280, 270, 80, 24);

        lbluongcaonhat.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lbluongcaonhat.setText("?");
        add(lbluongcaonhat);
        lbluongcaonhat.setBounds(280, 300, 90, 24);

        lbluongthapnhat.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lbluongthapnhat.setText("?");
        add(lbluongthapnhat);
        lbluongthapnhat.setBounds(280, 330, 90, 24);

        lbluongTB.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lbluongTB.setText("?");
        add(lbluongTB);
        lbluongTB.setBounds(280, 360, 100, 24);

        lbTongCN.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lbTongCN.setText("?");
        add(lbTongCN);
        lbTongCN.setBounds(280, 390, 90, 24);

        lbTongSP.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lbTongSP.setText("?");
        add(lbTongSP);
        lbTongSP.setBounds(280, 420, 100, 24);

        btnThongKe.setText("Thống Kê");
        btnThongKe.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnThongKe.setRadius(30);
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });
        add(btnThongKe);
        btnThongKe.setBounds(120, 170, 150, 50);
    }// </editor-fold>//GEN-END:initComponents

    private void cbothangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbothangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbothangActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO add your handling code here:
        if (ktra()) {
            readDatabase();
            ThongKeLuong(jpane1);
            Tinh();
        }
    }//GEN-LAST:event_btnThongKeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private custom_button.MyButton btnThongKe;
    private javax.swing.JComboBox<String> cbonam;
    private javax.swing.JComboBox<String> cbothang;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTK;
    private javax.swing.JPanel jpane1;
    private javax.swing.JLabel lbTongCN;
    private javax.swing.JLabel lbTongSP;
    private javax.swing.JLabel lbluongTB;
    private javax.swing.JLabel lbluongcaonhat;
    private javax.swing.JLabel lbluongthapnhat;
    private javax.swing.JLabel lbtongluong;
    // End of variables declaration//GEN-END:variables

    private void loadComBoBoxThang() {
        DefaultComboBoxModel modelThang = (DefaultComboBoxModel) cbothang.getModel();
        modelThang.removeAllElements();
        List<String> lst = thongkecndao.getALLThangLuong();
        for (String string : lst) {
            modelThang.addElement(string);
        }
        modelThang.setSelectedItem("");
    }

    private void loadComboBoxNam() {
        DefaultComboBoxModel modelnam = (DefaultComboBoxModel) cbonam.getModel();
        modelnam.removeAllElements();
        List<String> lst = thongkecndao.getALLNamLuong();
        for (String string : lst) {
            modelnam.addElement(string);
        }
        modelnam.setSelectedItem("");
    }

    private void readDatabase() {
        modelThongkeCN.setRowCount(0);
        DecimalFormat df = new DecimalFormat("###,000");
        String thang = cbothang.getSelectedItem().toString();
        String nam = cbonam.getSelectedItem().toString();
        List<LuongCongNhan> lst = thongkecndao.getALLLuong(thang, nam);
        for (LuongCongNhan lg : lst) {
            Object[] row = {lg.getMaCN().getMaCN(), lg.getTenCN().getTenCN(), lg.getSoSPLamDuoc(), lg.getTongCaLam(),
                lg.getThangLuong(), lg.getNamLuong(), df.format(lg.getTongLuong())};
            modelThongkeCN.addRow(row);
        }
    }

    public void ThongKeLuong(JPanel item1) {
        String thang = cbothang.getSelectedItem().toString();
        String nam = cbonam.getSelectedItem().toString();
        List<LuongCongNhan> lst = thongkecndao.getALLLuong(thang, nam);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (LuongCongNhan luongCongNhan : lst) {
            dataset.addValue(luongCongNhan.getTongLuong(), "Công Nhân", "" + luongCongNhan.getMaCN().getMaCN());
        }
        JFreeChart chartBar = ChartFactory.createBarChart("Thống kê lương Công Nhân".toUpperCase(),
                "Công Nhân", "Lương", dataset, PlotOrientation.VERTICAL, false, true, false);
        ChartPanel chartPanel = new ChartPanel(chartBar);

        CategoryPlot categoryPlot = chartBar.getCategoryPlot();
        BarRenderer br = (BarRenderer) categoryPlot.getRenderer();
        br.setMaximumBarWidth(.1); // set maximum width to 35% of chart
        item1.removeAll();
        item1.setLayout(new CardLayout());
        item1.add(chartPanel);
        item1.validate();
        item1.repaint();
    }

    public void Tinh() {
        DecimalFormat df = new DecimalFormat("###,000");
        String thang = cbothang.getSelectedItem().toString();
        String nam = cbonam.getSelectedItem().toString();
        List<LuongCongNhan> lst = thongkecndao.getALLLuong(thang, nam);
        for (LuongCongNhan luongCongNhan : lst) {
            System.out.println(luongCongNhan.getSoSPLamDuoc());
        }
        // Tổng lương tháng
        double tongluongthang = 0;
        for (LuongCongNhan luongCongNhan : lst) {
            tongluongthang += luongCongNhan.getTongLuong();
        }
        lbtongluong.setText(df.format(tongluongthang));
        //Lương cao nhất
        double max = 0;
        for (LuongCongNhan luongCongNhan : lst) {
            double luong = luongCongNhan.getTongLuong();
            if (luong > max) {
                max = luong;
            }
        }
        lbluongcaonhat.setText(df.format(max));
        // Lương thấp nhất
        double min = Double.MAX_VALUE;
        for (LuongCongNhan luongCongNhan : lst) {
            double luong = luongCongNhan.getTongLuong();
            if (luong < min) {
                min = luong;
            }
        }
        if (!thang.equals("") && !nam.equals("")) {
            lbluongthapnhat.setText(df.format(min));
        }
        if (lst.isEmpty()) {
            lbluongthapnhat.setText("0");
        }
        if (thang.equals("") && nam.equals("")) {
            lbluongthapnhat.setText("0");
        }
        //Lương trung bình
        int dem = 0;
        for (LuongCongNhan luongCongNhan : lst) {
            dem++;
        }
        if (!thang.equals("") && !nam.equals("")) {
            lbluongTB.setText(df.format(tongluongthang / dem));

        }
        if (lst.isEmpty()) {
            lbluongTB.setText("0");
        }
        if (thang.equals("") && nam.equals("")) {
            lbluongTB.setText("0");
        }
        // Tổng số công nhân
        lbTongCN.setText(dem + "");
        // Tổng sản phẩm
        int tongsplamdc = 0;
        for (LuongCongNhan luongCongNhan : lst) {
            tongsplamdc += luongCongNhan.getSoSPLamDuoc();
        }
        lbTongSP.setText(tongsplamdc+"");
        

    }

    public boolean ktra() {
        String nam = cbonam.getSelectedItem().toString();
        String thang = cbothang.getSelectedItem().toString();
        if (nam.equals("") && thang.equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Tháng và Năm để Thống Kê", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (nam.equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Năm để Thống Kê", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (thang.equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn Tháng để Thống Kê", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }

    }

}
