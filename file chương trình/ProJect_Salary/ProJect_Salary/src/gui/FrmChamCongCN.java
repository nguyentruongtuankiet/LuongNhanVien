/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import connect.ConnectDB1;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ItemEvent;
import java.awt.*;
import dao.SanPhamDAO;
import dao.CongNhanDAO;
import dao.CongDoanSPDAO;
import dao.PhanCongDAO;
import dao.CaLamViecDAO;
import dao.ChamCongCNDAO;
import dao.CongDoanSPDAO;
import entity.BangCongCN;
import entity.CongDoan;
import entity.CongNhan;
import entity.PhanCong;
import entity.CaLamViec;

import entity.SanPham;
import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.sql.Date;
import java.time.LocalDate;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Tuan Kiet Admin
 */
public class FrmChamCongCN extends javax.swing.JPanel {

    private SanPhamDAO spdao;
    private CongDoanSPDAO cddao;
    private PhanCongDAO pcdao;
    private CaLamViecDAO cadao;
    private ChamCongCNDAO ccdao;
    DefaultTableModel modelPC;
    DefaultTableModel modelCC;
    java.util.Date datetoday = new java.util.Date();

    /**
     * Creates new form ChamCongCN
     */
    public FrmChamCongCN() {
        initComponents();
        ConnectDB1.getInstance().connect();
        modelPC = (DefaultTableModel) tblPhanCong.getModel();
        spdao = new SanPhamDAO();
        pcdao = new PhanCongDAO();
        cadao = new CaLamViecDAO();
        ccdao = new ChamCongCNDAO();
        modelCC = (DefaultTableModel) tblChamCong.getModel();
//        btnChamCong.setEnabled(true);
        loadComboBoxCaLamViec();
        readDatabase();
        dateNgayCham.setDate(datetoday);
    }

    public void getDSPhanCongLoc() {
        modelPC.setRowCount(0);
        List<PhanCong> list = pcdao.getPhanCong();
        modelPC.setRowCount(0);
        for (PhanCong pc : list) {
            int sl = ccdao.findSL(pc.getMaCD().getMaCD(), pc.getMaCN().getMaCN());
            if (sl > 0) {
                Object[] row = {pc.getMaCN().getMaCN(), pc.getTenCN().getTenCN(), pc.getMaCD().getMaCD(), pc.getTenCD().getTenCD(), pc.getMaSP().getMaSP(), pc.getTenSP().getTenSP()};
                modelPC.addRow(row);
            }

        }
    }

    public void getDSPhanCong() {
        modelPC.setRowCount(0);
        List<PhanCong> list = pcdao.getPhanCong();
        modelPC.setRowCount(0);
        for (PhanCong pc : list) {

            Object[] row = {pc.getMaCN().getMaCN(), pc.getTenCN().getTenCN(), pc.getMaCD().getMaCD(), pc.getTenCD().getTenCD(), pc.getMaSP().getMaSP(), pc.getTenSP().getTenSP()};
            modelPC.addRow(row);
        }
    }

    public void clickTable() {
        int row = tblPhanCong.getSelectedRow();
        txtMaCN.setText(modelPC.getValueAt(row, 0).toString());

        txtTenCN.setText(modelPC.getValueAt(row, 1).toString());
        txtMaCĐ.setText(modelPC.getValueAt(row, 2).toString());
        txtTenCĐ.setText(modelPC.getValueAt(row, 3).toString());
        String macđ = modelPC.getValueAt(row, 2).toString();
        String macn = modelPC.getValueAt(row, 0).toString();
        int sl = ccdao.findSL(macđ, macn);
        lblsoluong.setText("" + sl);
        if (sl == 0) {
            JOptionPane.showMessageDialog(this, "Đã làm hết số lượng");
        }
    }

    public void loadComboBoxTenCĐ() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaCa.getModel();
        model.removeAllElements();
        List<CaLamViec> lst = cadao.getAllCaLamViec();
        for (CaLamViec ca : lst) {
            model.addElement(ca.getMaCa());
        }
        cboMaCa.setSelectedIndex(0);
    }

    public void loadComboBoxCaLamViec() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaCa.getModel();
        model.removeAllElements();
        List<CaLamViec> lst = cadao.getAllCaLamViec();
        for (CaLamViec ca : lst) {
            model.addElement(ca.getMaCa());
        }
        cboMaCa.setSelectedIndex(0);
        if (cboMaCa.getSelectedItem().toString().equals("CA01")) {
            txtGioLam.setText("7h-11h");
            txtTenCa.setText("Sáng");
        }

    }

    public void loadgiotheoten() {
        String ten = cboMaCa.getSelectedItem().toString();
        String giolam = ccdao.layGioLamtheoca(ten);
        txtGioLam.setText(giolam);
    }

    private int soluongconlai() {
        return Integer.parseInt(lblsoluong.getText()) - Integer.parseInt(txtSL.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhanCong = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        lblTenCĐ = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dateNgayCham = new com.toedter.calendar.JDateChooser();
        txtGioLam = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChamCong = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        txtMaCN = new javax.swing.JTextField();
        txtTenCĐ = new javax.swing.JTextField();
        txtMaCĐ = new javax.swing.JTextField();
        lblsoluong = new javax.swing.JLabel();
        cboMaCa = new javax.swing.JComboBox<>();
        txtTenCa = new javax.swing.JTextField();
        lblmaSP = new javax.swing.JLabel();
        txtTenCN = new javax.swing.JTextField();
        cbtangCa = new javax.swing.JCheckBox();
        cbCoPhep = new javax.swing.JCheckBox();
        cbCoMat = new javax.swing.JCheckBox();
        lblSoLuonglamDuoc = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnXoa = new custom_button.MyButton();
        btnChamCong = new custom_button.MyButton();
        btnDSPC = new custom_button.MyButton();
        myButton1 = new custom_button.MyButton();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel1.setText("CHẤM CÔNG CÔNG NHÂN");
        add(jLabel1);
        jLabel1.setBounds(490, 10, 320, 26);

        tblPhanCong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblPhanCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã CN", "Tên CN", "Mã Công Đoạn", "Tên Công Đoạn", "Mã SP", "Tên SP"
            }
        ));
        tblPhanCong.setRowHeight(25);
        tblPhanCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhanCongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhanCong);

        add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 590, 240);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Mã CN:");
        add(jLabel3);
        jLabel3.setBounds(660, 60, 60, 22);

        lblTenCĐ.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblTenCĐ.setText("Tên Công Đoạn:");
        add(lblTenCĐ);
        lblTenCĐ.setBounds(610, 160, 120, 22);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Mã Công Đoạn:");
        add(jLabel5);
        jLabel5.setBounds(610, 210, 110, 17);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Ngày Chấm:");
        add(jLabel6);
        jLabel6.setBounds(920, 60, 90, 22);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Ca Làm:");
        add(jLabel7);
        jLabel7.setBounds(960, 210, 60, 20);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Giờ Làm:");
        add(jLabel8);
        jLabel8.setBounds(950, 160, 70, 22);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("Mã ca:");
        add(jLabel10);
        jLabel10.setBounds(960, 110, 50, 20);
        add(dateNgayCham);
        dateNgayCham.setBounds(1020, 50, 150, 30);

        txtGioLam.setEditable(false);
        txtGioLam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGioLamActionPerformed(evt);
            }
        });
        add(txtGioLam);
        txtGioLam.setBounds(1020, 150, 150, 30);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("Còn Lại:");
        add(jLabel11);
        jLabel11.setBounds(660, 250, 70, 30);

        tblChamCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã CN", "Tên CN", "Mã CĐ", "Tên CĐ", "Mã Ca", "Tên Ca", "Số SP Làm Được", "Ngày Chấm", "Có Mặt", "Nghỉ Phép", "TăngCa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblChamCong.setRowHeight(30);
        tblChamCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChamCongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblChamCong);

        add(jScrollPane2);
        jScrollPane2.setBounds(0, 400, 1270, 300);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Số Lượng Làm Được:");
        add(jLabel2);
        jLabel2.setBounds(870, 250, 150, 30);

        txtSL.setEnabled(false);
        add(txtSL);
        txtSL.setBounds(1020, 250, 150, 30);

        txtMaCN.setEditable(false);
        add(txtMaCN);
        txtMaCN.setBounds(730, 50, 180, 30);

        txtTenCĐ.setEditable(false);
        add(txtTenCĐ);
        txtTenCĐ.setBounds(730, 150, 180, 30);

        txtMaCĐ.setEditable(false);
        add(txtMaCĐ);
        txtMaCĐ.setBounds(730, 200, 180, 30);

        lblsoluong.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblsoluong.setForeground(new java.awt.Color(255, 51, 51));
        add(lblsoluong);
        lblsoluong.setBounds(730, 250, 80, 30);

        cboMaCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMaCaActionPerformed(evt);
            }
        });
        add(cboMaCa);
        cboMaCa.setBounds(1020, 100, 120, 30);

        txtTenCa.setEditable(false);
        add(txtTenCa);
        txtTenCa.setBounds(1020, 200, 150, 30);

        lblmaSP.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblmaSP.setText("Tên CN:");
        add(lblmaSP);
        lblmaSP.setBounds(660, 110, 60, 16);

        txtTenCN.setEditable(false);
        txtTenCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenCNActionPerformed(evt);
            }
        });
        add(txtTenCN);
        txtTenCN.setBounds(730, 100, 180, 30);

        cbtangCa.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cbtangCa.setText("Tăng Ca");
        cbtangCa.setEnabled(false);
        add(cbtangCa);
        cbtangCa.setBounds(1090, 350, 90, 21);

        cbCoPhep.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cbCoPhep.setText("Có Phép");
        cbCoPhep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCoPhepActionPerformed(evt);
            }
        });
        add(cbCoPhep);
        cbCoPhep.setBounds(970, 350, 90, 20);

        cbCoMat.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cbCoMat.setText("Có mặt/ Vắng mặt");
        cbCoMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCoMatActionPerformed(evt);
            }
        });
        add(cbCoMat);
        cbCoMat.setBounds(780, 350, 160, 24);

        lblSoLuonglamDuoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSoLuonglamDuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSoLuonglamDuocMouseClicked(evt);
            }
        });
        add(lblSoLuonglamDuoc);
        lblSoLuonglamDuoc.setBounds(840, 290, 330, 30);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/support1.png"))); // NOI18N
        jLabel14.setText("Trợ giúp");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        add(jLabel14);
        jLabel14.setBounds(30, 0, 90, 50);

        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnXoa.setRadius(30);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa);
        btnXoa.setBounds(620, 320, 130, 50);

        btnChamCong.setText("Chấm Công");
        btnChamCong.setEnabled(false);
        btnChamCong.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnChamCong.setRadius(30);
        btnChamCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChamCongMouseClicked(evt);
            }
        });
        btnChamCong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChamCongActionPerformed(evt);
            }
        });
        add(btnChamCong);
        btnChamCong.setBounds(440, 320, 130, 50);

        btnDSPC.setText(" Danh sách phân công");
        btnDSPC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnDSPC.setRadius(30);
        btnDSPC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDSPCMouseClicked(evt);
            }
        });
        add(btnDSPC);
        btnDSPC.setBounds(220, 320, 190, 50);

        myButton1.setText("Lọc");
        myButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        myButton1.setRadius(30);
        myButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myButton1MouseClicked(evt);
            }
        });
        add(myButton1);
        myButton1.setBounds(60, 320, 130, 50);
    }// </editor-fold>//GEN-END:initComponents

    private void txtGioLamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGioLamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGioLamActionPerformed

    private void tblPhanCongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhanCongMouseClicked
        // TODO add your handling code here:
        clickTable();
        btnChamCong.setEnabled(true);

    }//GEN-LAST:event_tblPhanCongMouseClicked

    private void cboMaCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMaCaActionPerformed
        layGiolamTheoMaCa();
        layTencaTheoMaCa();        // TODO add your handling code here
        if (cboMaCa.getSelectedItem().equals("CA03") && cbCoPhep.isSelected() == false) {
            cbtangCa.setSelected(true);
        } else {
            cbtangCa.setSelected(false);
        }


    }//GEN-LAST:event_cboMaCaActionPerformed
    public void layGiolamTheoMaCa() {
        String maCa = cboMaCa.getSelectedItem().toString();

        String ca = ccdao.layGioLamtheoca(maCa);
        txtGioLam.setText(ca);

    }

    public void layTencaTheoMaCa() {
        String maCa = cboMaCa.getSelectedItem().toString();

        String ca = ccdao.layTenCatheoMaca(maCa);
        txtTenCa.setText(ca);

    }
    private void txtTenCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenCNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenCNActionPerformed

    private void cbCoMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCoMatActionPerformed
        // TODO add your handling code here:
        if (cbCoPhep.isSelected() == true) {
            JOptionPane.showMessageDialog(this, "Không hợp lệ");
            cbCoMat.setSelected(false);
            cbCoPhep.setSelected(false);
        }
        if (cbCoMat.isSelected() == true) {
            txtSL.setEnabled(true);
            cboMaCa.setEnabled(true);

        }
        if (cbCoMat.isSelected() == false) {
            txtSL.setEnabled(false);
            cbtangCa.setSelected(false);
            txtSL.setText("");
        }

    }//GEN-LAST:event_cbCoMatActionPerformed

    private void cbCoPhepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCoPhepActionPerformed
        // TODO add your handling code here:
        cbtangCa.setSelected(false);
        if (cbCoMat.isSelected() == false) {
            txtSL.setText("0");
        }
        if (cbCoPhep.isSelected() == false) {
            txtSL.setText("");
        }
        if (cbCoMat.isSelected() == true) {
            JOptionPane.showMessageDialog(this, "Không hợp lệ");
            cbCoMat.setSelected(false);
            cbCoPhep.setSelected(false);
            txtSL.setEnabled(false);
            txtSL.setText("");
        }
    }//GEN-LAST:event_cbCoPhepActionPerformed

    private void tblChamCongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChamCongMouseClicked
        // TODO add your handling code here:
        btnXoa.setEnabled(true);
    }//GEN-LAST:event_tblChamCongMouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        new HelpCNCC().setVisible(true);
    }//GEN-LAST:event_jLabel14MouseClicked

    private void lblSoLuonglamDuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSoLuonglamDuocMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSoLuonglamDuocMouseClicked

    private void btnDSPCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDSPCMouseClicked
        // TODO add your handling code here:
        getDSPhanCong();
    }//GEN-LAST:event_btnDSPCMouseClicked

    private void btnChamCongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChamCongMouseClicked
        // TODO add your handling code here:
        if (ktra() && regexNgaySinh()) {
            ChamCong();
        }
    }//GEN-LAST:event_btnChamCongMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        btnXoa.setEnabled(false);
        xoa();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnChamCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChamCongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnChamCongActionPerformed

    private void myButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myButton1MouseClicked
        // TODO add your handling code here:
        getDSPhanCongLoc();
        readDatabaseLoc();
    }//GEN-LAST:event_myButton1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private custom_button.MyButton btnChamCong;
    private custom_button.MyButton btnDSPC;
    private custom_button.MyButton btnXoa;
    private javax.swing.JCheckBox cbCoMat;
    private javax.swing.JCheckBox cbCoPhep;
    private javax.swing.JComboBox<String> cboMaCa;
    private javax.swing.JCheckBox cbtangCa;
    private com.toedter.calendar.JDateChooser dateNgayCham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSoLuonglamDuoc;
    private javax.swing.JLabel lblTenCĐ;
    private javax.swing.JLabel lblmaSP;
    private javax.swing.JLabel lblsoluong;
    private custom_button.MyButton myButton1;
    private javax.swing.JTable tblChamCong;
    private javax.swing.JTable tblPhanCong;
    private javax.swing.JTextField txtGioLam;
    private javax.swing.JTextField txtMaCN;
    private javax.swing.JTextField txtMaCĐ;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenCN;
    private javax.swing.JTextField txtTenCa;
    private javax.swing.JTextField txtTenCĐ;
    // End of variables declaration//GEN-END:variables

    public void xoaTrang() {
        txtMaCN.setText("");
        txtTenCN.setText("");
        txtMaCĐ.setText("");
        txtTenCĐ.setText("");
        txtGioLam.setText("");
        txtTenCa.setText("");
        txtSL.setText("");
        lblsoluong.setText("");
//        dateNgayCham.setDate(null);
        cboMaCa.setSelectedIndex(0);

    }

    public void ChamCong() {
        SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String macn = txtMaCN.getText().trim();
        String tencn = txtTenCN.getText().trim();
        String maCD = txtMaCĐ.getText().trim();
        String tenSD = txtTenCĐ.getText().trim();
        String sl = txtSL.getText().trim();
        String gl = txtGioLam.getText().trim();
        String tenca = txtTenCa.getText().trim();
        boolean diLam = cbCoMat.isSelected();
        boolean nghiphep = cbCoPhep.isSelected();
        boolean tangca = cbtangCa.isSelected();
        Date ns = Date.valueOf(df.format(dateNgayCham.getDate()));
        String maca = cboMaCa.getSelectedItem().toString();
        CaLamViec clv = new CaLamViec(maca, tenca);
        CongNhan cn = new CongNhan(macn, tencn);
        CongDoan cd = new CongDoan(maCD, tenSD);
        BangCongCN bc = new BangCongCN(clv, clv, cn, cn, cd, cd, Integer.parseInt(sl), ns, diLam, nghiphep, tangca);
        List<BangCongCN> lst = ccdao.getALLCC();

        if (lst.contains(bc)) {
            JOptionPane.showMessageDialog(this, "Đã được chấm công");
        } else {
            if (ccdao.craeateChamCong(bc, soluongconlai())) {
                readDatabase();
            }
            if (ccdao.updateCongDoan(bc, soluongconlai())) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
            }
        }
    }

    public void xoa() {
        int row = tblChamCong.getSelectedRow();
        int ques = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa ?", "Warning", JOptionPane.YES_NO_OPTION);
        if (ques == JOptionPane.YES_OPTION) {
            String macn = (String) tblChamCong.getValueAt(row, 0);
            String macd = (String) tblChamCong.getValueAt(row, 2);
            String maca = (String) tblChamCong.getValueAt(row, 4);
            int soluonglam = Integer.parseInt(modelCC.getValueAt(row, 6).toString());
            int sl = ccdao.findSL(macd, macn);

            ccdao.updateCongDoanKhiXoa(macd, sl + soluonglam);
            ccdao.removeChamCong(macd, macn, maca);
            readDatabase();
        }
        xoaTrang();
    }

    public void readDatabaseLoc(){
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date ngayCham = Date.valueOf(df.format(dateNgayCham.getDate()));
        modelCC.setRowCount(0);
        List<BangCongCN> lst = ccdao.locTheoNgay(ngayCham);
        SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
        for (BangCongCN bc : lst) {
            Object[] row = {bc.getMaCN().getMaCN(), bc.getTenCN().getTenCN(), bc.getMaCD().getMaCD(), bc.getTenCD().getTenCD(), bc.getMaCa().getMaCa(),
                bc.getTenCa().getTenCa(), bc.getSoLuongLamDc(), date.format(bc.getNgayCham()), bc.isCoMat(), bc.isCoPhep(), bc.isTangCa()};
            modelCC.addRow(row);
        }
    }

    private void readDatabase() {
        modelCC.setRowCount(0);
        SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
        List<BangCongCN> lst = ccdao.getALLCC();
        for (BangCongCN bc : lst) {
            Object[] row = {bc.getMaCN().getMaCN(), bc.getTenCN().getTenCN(), bc.getMaCD().getMaCD(), bc.getTenCD().getTenCD(), bc.getMaCa().getMaCa(),
                bc.getTenCa().getTenCa(), bc.getSoLuongLamDc(), date.format(bc.getNgayCham()), bc.isCoMat(), bc.isCoPhep(), bc.isTangCa()};
            modelCC.addRow(row);
        }

    }

    private boolean ktra() {
        String sl = txtSL.getText();
        String sl1 = lblsoluong.getText();
        int soluong = Integer.parseInt(sl);
        int soluong1 = Integer.parseInt(sl1);
        if (soluong < 0) {
            JOptionPane.showMessageDialog(this, "Số lượng làm được không được < 0", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (soluong > soluong1) {
            JOptionPane.showMessageDialog(this, "Số lượng làm được không được lớn hơn số lượng đang có ", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            lblSoLuonglamDuoc.setText("");
            return true;
        }

    }

    public boolean regexNgaySinh() {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");

        LocalDate date = LocalDate.now();
        String nam = "" + date.getYear();
        String thang = "" + date.getMonthValue();
        String ngay = "" + date.getDayOfMonth();

        Date date1 = Date.valueOf(df.format(dateNgayCham.getDate()));
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat();
        SimpleDateFormat simpleDateFormat1 = new SimpleDateFormat();
        SimpleDateFormat simpleDateFormat2 = new SimpleDateFormat();
        simpleDateFormat.applyPattern("yyyy");
        simpleDateFormat1.applyPattern("MM");
        simpleDateFormat2.applyPattern("dd");
        String nam1 = simpleDateFormat.format(date1);
        String thang1 = simpleDateFormat1.format(date1);
        String ngay1 = simpleDateFormat2.format(date1);

        int namngaycham = Integer.parseInt(nam1);
        int thangngaycham = Integer.parseInt(thang1);
        int ngaycham = Integer.parseInt(ngay1);

        int namnay = Integer.parseInt(nam);
        int thangnay = Integer.parseInt(thang);
        int ngaynay = Integer.parseInt(ngay);

        if (namnay - namngaycham < 0) {
            JOptionPane.showMessageDialog(this, "Ngày chấm không được sau ngày hiện tại", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (namnay - namngaycham > 0) {
            JOptionPane.showMessageDialog(this, "Ngày chấm không được trước ngày hiện tại", "invalidation", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (namnay == namngaycham) {
            if (thangnay - thangngaycham < 0) {
                JOptionPane.showMessageDialog(this, "Ngày chấm không được sau ngày hiện tại", "invalidation", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (thangnay - thangngaycham > 0) {
                JOptionPane.showMessageDialog(this, "Ngày chấm không được trước ngày hiện tại", "invalidation", JOptionPane.ERROR_MESSAGE);
                return false;
            } else if (thangnay == thangngaycham) {
                if (ngaynay - ngaycham < 0) {
                    JOptionPane.showMessageDialog(this, "Ngày chấm không được sau ngày hiện tại", "invalidation", JOptionPane.ERROR_MESSAGE);
                    return false;
                } else if (ngaynay - ngaycham > 0) {
                    JOptionPane.showMessageDialog(this, "Ngày chấm không được trước ngày hiện tại", "invalidation", JOptionPane.ERROR_MESSAGE);
                    return false;
                } else {
                    return true;
                }
            }
        }
        return false;
    }
}
